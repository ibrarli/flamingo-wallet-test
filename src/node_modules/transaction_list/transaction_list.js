const STATE = require('STATE')
const statedb = STATE(__filename)
const { sdb, get } = statedb(fallback_module)

const transaction_row = require('transaction_row')
const transaction_history = require('transaction_history') 

module.exports = transaction_list


async function transaction_list(opts = {}) {
  const { id, sdb } = await get(opts.sid)
  const { drive } = sdb

  const on = {
    style: inject,
    data: ondata
  }

  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })

  shadow.innerHTML = `
    <!-- <div class="component-label">Transaction List</div> -->
    <div class="transaction-list-container">
      <div class="transaction-list-header">  
        <div class="transaction-list-title"> Transactions </div>
        <div class="transaction-list-see-all"> See all</div>
      </div>
    </div>
    <style></style>
  `

  const style = shadow.querySelector('style')
  const container_el = shadow.querySelector('.transaction-list-container')
  const see_all_btn = shadow.querySelector('.transaction-list-see-all')

  const subs = await sdb.watch(onbatch)

  subs.slice(1, 5).forEach(async sub => {
      container_el.append(await transaction_row(sub))
  })

  see_all_btn.addEventListener('click', async () => {
    const history_component = await transaction_history(subs[0])
    shadow.innerHTML = ''
    shadow.appendChild(history_component)
  })

  return el

  function fail(data, type) {
    throw new Error('invalid message', { cause: { data, type } })
  }

  async function onbatch(batch) {
    for (const { type, paths } of batch) {
      const data = await Promise.all(
        paths.map(path => drive.get(path).then(file => file.raw))
      )
      const func = on[type] || fail
      await func(data, type)
    }
  }

  function inject(data) {
    style.textContent =  data[0]
  }

  async function ondata(data) {
  }
}

function fallback_module () {
  return {
    api,
    _: {
      'transaction_history':{ $: ''},
      'transaction_row':{ $: '' },
    } 
  }
  function api(opts){
    const transaction_history = {
      mapping: {
        style: 'style',
        data: 'data'
      },
      0: {
        value:[
          {
            dateString: "2025-08-01",
            tid: "Luis fedrick",
            ttime: "11:30 AM",
            tamount: "+ 0.02456",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-08-01",
            tid: "3TgmbHfn...455p",
            ttime: "02:15 PM",
            tamount: "+ 0.03271",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-08-01",
            tid: "Mark Kevin",
            ttime: "03:45 PM",
            tamount: "- 0.00421",
            avatar: "https://images.stockcake.com/public/a/1/3/a13b303a-a843-48e3-8c87-c0ac0314a282_large/intense-male-portrait-stockcake.jpg"
          },
          {
            dateString: "2025-07-31",
            tid: "7RwmbHfn...455p",
            ttime: "04:45 PM",
            tamount: "- 0.03791",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.7XLV6q-D_hA-GQh_eJu52AHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-07-31",
            tid: "Luis fedrick",
            ttime: "11:30 AM",
            tamount: "+ 0.02456",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.255ajP8y6dHwTTO8QbBzqwHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-07-31",
            tid: "3TgmbHfn...455p",
            ttime: "02:15 PM",
            tamount: "+ 0.03271",
            avatar: "https://images.stockcake.com/public/a/1/3/a13b303a-a843-48e3-8c87-c0ac0314a282_large/intense-male-portrait-stockcake.jpg"
          },
          {
            dateString: "2025-07-28",
            tid: "Mark Kevin",
            ttime: "03:45 PM",
            tamount: "- 0.00421",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.bdn3Kne-OZLwGM8Uoq5-7gHaHa?w=512&h=512&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-08-01",
            tid: "7RwmbHfn...455p",
            ttime: "04:45 PM",
            tamount: "- 0.03791",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-07-28",
            tid: "Luis fedrick",
            ttime: "11:30 AM",
            tamount: "+ 0.02456",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-07-29",
            tid: "3TgmbHfn...455p",
            ttime: "02:15 PM",
            tamount: "+ 0.03271",
            avatar: "https://images.stockcake.com/public/a/1/3/a13b303a-a843-48e3-8c87-c0ac0314a282_large/intense-male-portrait-stockcake.jpg"
          },
          {
            dateString: "2025-07-30",
            tid: "Mark Kevin",
            ttime: "03:45 PM",
            tamount: "- 0.00421",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.255ajP8y6dHwTTO8QbBzqwHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            dateString: "2025-05-10",
            tid: "7RwmbHfn...455p",
            ttime: "04:45 PM",
            tamount: "- 0.03791",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.7XLV6q-D_hA-GQh_eJu52AHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          }
        ]
      }
    }


    const transaction_row = {
      mapping: {
        style: 'style',
        data: 'data'
      }
    }
    opts.value.forEach((transaction, index) => {
      transaction_row[index] = transaction
      console.log("Transaction Row:", transaction)
    })
    return {
      drive: {
        'style/': {
          'transaction_list.css':{
            '$ref': 'transaction_list.css'
          }
        },
        'data/': {
          'opts.json':{
            raw: opts
          }
        }
      },
      _:{
        transaction_history,
        transaction_row
      }
    }
  }
}


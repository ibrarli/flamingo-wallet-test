const STATE = require('STATE')
const statedb = STATE(__filename)
const { sdb, get } = statedb(fallback_module)

const transaction_list = require('transaction_list')
const total_wealth = require('total_wealth')
const action_buttons = require('action_buttons')
const menu = require('menu')
const home_page_header = require('home_page_header')

module.exports = home_page

async function home_page (opts = {}) {
  const { id, sdb } = await get(opts.sid)
  const { drive } = sdb

  const on = {
    style: inject,
    data: ondata
  }

  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })

  shadow.innerHTML = `
    <div class="component-label">Home Page</div>
    <div class="home-page-container"></div>
    <style></style>
  `

  const style = shadow.querySelector('style')

  const container = shadow.querySelector('.home-page-container')

  const subs = await sdb.watch(onbatch)
  
  const transaction_list_component = await transaction_list(subs[0])
  const total_wealth_component = await total_wealth(subs[1])
  const action_buttons_component = await action_buttons(subs[2])
  const footer_component = await menu(subs[3])
  const home_page_header_component = await home_page_header(subs[4])

  container.appendChild(home_page_header_component)
  container.appendChild(action_buttons_component)
  container.appendChild(transaction_list_component)
  container.appendChild(total_wealth_component)
  container.appendChild(footer_component)

  return el

  function fail(data, type) {
    throw new Error('invalid message', { cause: { data, type } })
  }

  async function onbatch (batch) {
    for (const { type, paths } of batch){
      const data = await Promise.all(paths.map(path => drive.get(path).then(file => file.raw)))
      const func = on[type] || fail
      await func(data, type)
    }
  }

  function inject (data) {
    style.textContent = data[0]
  }

  async function ondata(data) {
  }
}


function fallback_module () {
  return {
    api,
    _: {
      'transaction_list':{ $: '' },
      'total_wealth':{ $: '' },
      'action_buttons':{ $: '' },
      'menu':{ $: '' },
      'home_page_header':{ $: '' }
    } 
  }
  function api(opts){

    const transaction_list = {
      mapping: {
        style: 'style',
        data: 'data',
      },
      0: {
        value: [
          {
            tid: "Luis fedrick",
            ttime: "11:30 AM",
            tamount: "+ 0.02456",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            tid: "3TgmbHfn...455p",
            ttime: "02:15 PM",
            tamount: "+ 0.03271",
            avatar: "https://tse4.mm.bing.net/th/id/OIP.VIRWK2jj8b2cHBaymZC5AgHaHa?w=800&h=800&rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            tid: "Mark Kevin",
            ttime: "03:45 PM",
            tamount: "- 0.00421",
            avatar: "https://images.stockcake.com/public/a/1/3/a13b303a-a843-48e3-8c87-c0ac0314a282_large/intense-male-portrait-stockcake.jpg"     
          },
          {
            tid: "7RwmbHfn...455p",
            ttime: "04:45 PM",
            tamount: "- 0.03791",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.7XLV6q-D_hA-GQh_eJu52AHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          },
          {
            tid: "Luis fedrick",
            ttime: "11:30 AM",
            tamount: "+ 0.02456",
            avatar: "https://tse2.mm.bing.net/th/id/OIP.255ajP8y6dHwTTO8QbBzqwHaHa?rs=1&pid=ImgDetMain&o=7&rm=3"
          },
        ]
      }
    }
    
    const total_wealth = {
      mapping: {
        style: 'style',
        data: 'data',
        icons: 'icons'
      },
      0: {
        value: {
          total: 0.9862,
          usd: 1000,
          lightning: 0.02456,
          bitcoin: 0.96164
        }
      }
    }

    const action_buttons = {
      mapping: { 
        style: 'style',
        data: 'data'
      },
      0: {
        buttons: [
          { label: 'Send', action: 'send' },
          { label: 'Receive', action: 'receive' },
          { label: 'Wallet', action: 'wallet' }
        ]
      }
    }
   
    const menu = {
      mapping: {
        style: 'style',
        data: 'data',
        icons: 'icons'
      },
      0: ""
    }

    const home_page_header = {
      mapping: {
        style: 'style',
        data: 'data',
        icons: 'icons'
      },
      0: {
        amount: "0.9616"
      } 
    }

    return {
      drive: {
        'style/': {
          'home_page.css':{
            '$ref': 'home_page.css'
          }
        },
        'data/': {
          'opts.json':{
            raw: opts
          }
        }
      },
      _:{
        transaction_list,
        total_wealth,
        action_buttons,
        menu,
        home_page_header
      }
    }
  }
}
